name: SQLEnclave CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches:
      - '*'
  schedule:
    # run at 9AM & 9PM UTC
    - cron:  '0 9,21 * * *'

env:
  DEVELOPER_DIR: /Applications/Xcode_14.1.app/Contents/Developer

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Test (Debug)
        run: swift test -v --configuration debug --parallel
      - name: Test (Release)
        run: swift test -v --configuration release -Xswiftc -enable-testing --parallel

  ios:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v2
      - name: Test (Debug)
        run: |
            xcodebuild clean test \
              -configuration Debug \
              -scheme "SQLEnclave" \
              -sdk "iphonesimulator" \
              -destination "platform=iOS Simulator,name=iPhone 14" \
              ONLY_ACTIVE_ARCH=NO CODE_SIGNING_REQUIRED=NO
      - name: Test (Release)
        run: |
            xcodebuild clean test \
              -configuration Release \
              -scheme "SQLEnclave" \
              -sdk "iphonesimulator" \
              -destination "platform=iOS Simulator,name=iPhone 14" \
              ONLY_ACTIVE_ARCH=NO CODE_SIGNING_REQUIRED=NO

  tvos:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v2
      - name: Test (Debug)
        run: |
            xcodebuild clean test \
              -configuration Debug \
              -scheme "SQLEnclave" \
              -sdk "appletvsimulator" \
              -destination "platform=tvOS Simulator,name=Apple TV" \
              ONLY_ACTIVE_ARCH=NO CODE_SIGNING_REQUIRED=NO
      - name: Test (Release)
        run: |
            xcodebuild clean test \
              -configuration Release \
              -scheme "SQLEnclave" \
              -sdk "appletvsimulator" \
              -destination "platform=tvOS Simulator,name=Apple TV" \
              ONLY_ACTIVE_ARCH=NO CODE_SIGNING_REQUIRED=NO

  macos:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v2
      - name: Test (Debug)
        run: swift test -v --configuration debug --parallel
      - name: Test (Release)
        run: swift test -v --configuration release -Xswiftc -enable-testing --parallel

  api-doc:
    runs-on: macos-12 # needed to be able to document SwiftUI
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - name: Build documentation
        run: |
          swift -version
          export SWIFTPM_ENABLE_COMMAND_PLUGINS=1
          export DOCC_JSON_PRETTYPRINT="YES"

          # insert the docc dependency
          sed -I "" 's;^    dependencies: \[;    dependencies: [ .package(name: "swift-docc-plugin", url: "https://github.com/apple/swift-docc-plugin", from: "1.0.0"), ;1' Package.swift

          swift package --allow-writing-to-directory docs \
            generate-documentation --target SQLEnclave \
            --disable-indexing \
            --transform-for-static-hosting \
            --hosting-base-path SQLEnclave \
            --output-path docs

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v2

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./docs

  # Deployment job (which must be in a separate job)
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: read
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    needs: api-doc
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

